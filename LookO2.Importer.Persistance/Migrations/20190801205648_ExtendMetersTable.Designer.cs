// <auto-generated />
using System;
using LookO2.Importer.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LookO2.Importer.Persistance.Migrations
{
    [DbContext(typeof(ReadingsContext))]
    [Migration("20190801205648_ExtendMetersTable")]
    partial class ExtendMetersTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("LookO2.Importer.Persistance.Entitites.MeterDeviceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DeviceId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("LookO2.Importer.Persistance.Entitites.MeterReadingEntity", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTimeOffset>("DateTime");

                    b.Property<int>("DeviceId");

                    b.Property<double?>("Hcho");

                    b.Property<double?>("Humidity");

                    b.Property<double>("PM1");

                    b.Property<double>("PM10");

                    b.Property<double>("PM25");

                    b.Property<double?>("Temerature");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Readings");
                });

            modelBuilder.Entity("LookO2.Importer.Persistance.Entitites.MeterReadingEntity", b =>
                {
                    b.HasOne("LookO2.Importer.Persistance.Entitites.MeterDeviceEntity", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
